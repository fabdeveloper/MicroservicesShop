springdoc:
 swagger-ui.path: /openapi/swagger-ui.html
 api-docs.path: /openapi/v3/api-docs
 packagesToScan: fab.shop.microservices.core.product
 pathsToMatch: /**

api:

 common:
  version: 1.0.0
  title: Sample API
  description: Description of the API...
  termsOfService: MY TERMS OF SERVICE
  license: MY LICENSE
  licenseUrl: MY LICENSE URL
  externalDocDesc: MY WIKI PAGE
  externalDocUrl: MY WIKI URL
  contact:
    name: NAME OF CONTACT
    url: URL TO CONTACT
    email: contact@mail.com


 responseCodes:
  ok.description: OK
  badRequest.description: Bad Request, invalid format of the request.
    See response message for more information
  notFound.description: Not found, the specified id does not exist
  unprocessableEntity.description: Unprocessable entity, input
    parameters caused the processing to fail. See response message for more
    information

 product-service:
    post-productbooking:
      description: Book a set of product and block it  for a time previously to confirm a purchase and returns a productBookingNumber in a ProductBookingRS response
      notes: pending

    post-productpurchaseconfirm:
      description: It Confirms a purchase so the product will not be available
      notes: pending



server.port: 7001
server.error.include-message: always

# Strongly recommend to set this property to "none" in a production environment!
spring.jpa.hibernate.ddl-auto: update
# spring.jpa.database-platform: org.hibernate.dialect.MySQLDialect

spring.datasource:
  url: jdbc:mysql://localhost:3307/product-db
  username: userp
  password: pwdp

spring.datasource.hikari.initializationFailTimeout: 60000


logging:
  level:
    root: INFO
    fab.shop: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
spring.config.activate.on-profile: docker

server.port: 7001

spring.datasource:
  url: jdbc:mysql://mysql_product/product-db

